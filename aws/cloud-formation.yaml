Parameters:

  CommitSha:
    Type: String
    Description:
      The Git commit SHA to deploy. Usually this is the HEAD of the default
      branch, but it can be anything with a tagged image in the registry.

  GitHubPersonalAccessToken:
    Type: String
    Description:
      A GitHub Personal Access Token used to authenticate with their Docker
      registry (docker.pkg.github.com) and pull container images.
    NoEcho: true

  GitHubRepository:
    Type: String
    Description:
      The project name, which is used to name associated resources. This is
      just the repository without the organization or username. Note that
      changing this will probably force replacement on most resources.
    Default: monadoc

  GitHubUsername:
    Type: String
    Description:
      The GitHub username to use for various tasks. This is mostly used to
      avoid repeating yourself.
    Default: tfausak

  Port:
    Type: Number
    Description:
      The port number to bind inside the container. It's unlikely that you'll
      need to change this.
    Default: 4444

  Region:
    Type: String
    Description:
      The region to use for various AWS operations. Make sure this matches
      whatever you've configured the AWS CLI to use.
    Default: us-east-1

Resources:

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html
  DockerCredentials:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${GitHubRepository}-docker-credentials
      Description:
        Credentials used to authenticate with GitHub's Docker registry.
      SecretString: !Sub >
        { "username": "${GitHubUsername}"
        , "password": "${GitHubPersonalAccessToken}"
        }

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${GitHubRepository}-log-group
      RetentionInDays: 30

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html
  Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${GitHubRepository}-role-${AWS::Region}
      Description: !Sub
        Role used to launch ECS tasks for the ${GitHubRepository} project.
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
            Effect: Allow
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        # https://docs.aws.amazon.com/AmazonECS/latest/developerguide/private-auth.html#private-auth-iam
        - PolicyName: !Sub ${GitHubRepository}-get-secret-value
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - kms:Decrypt
                Resource:
                  - !Ref DockerCredentials
                  - !Sub arn:aws:kms:${Region}:${AWS::AccountId}:key/key_id

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html
  Task:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${GitHubRepository}-task-definition
      Cpu: 256
      Memory: 512
      RequiresCompatibilities: [ FARGATE ]
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref Role
      ContainerDefinitions:
        - Name: !Sub ${GitHubRepository}-container
          Essential: true
          Image: !Sub docker.pkg.github.com/${GitHubUsername}/${GitHubRepository}/${GitHubRepository}:${CommitSha}
          RepositoryCredentials:
            CredentialsParameter: !Ref DockerCredentials
          Command:
            - monadoc
            - --host=*
            - !Sub --port=${Port}
          PortMappings:
            - ContainerPort: !Ref Port
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref Region
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: !Ref CommitSha

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html
  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${GitHubRepository}-cluster

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.10.0.0/16

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: 10.10.0.0/24

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref Vpc
      GroupName: !Sub ${GitHubRepository}-security-group
      GroupDescription:
        Allows everything.
      SecurityGroupEgress:
        CidrIp: 0.0.0.0/0
        IpProtocol: -1
        FromPort: -1
        ToPort: -1
      SecurityGroupIngress:
        CidrIp: 0.0.0.0/0
        IpProtocol: -1
        FromPort: -1
        ToPort: -1

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html
  InternetGateway:
    Type: AWS::EC2::InternetGateway

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html
  Route:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html
  RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html
  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub ${GitHubRepository}-service
      Cluster: !Ref Cluster
      DesiredCount: 1
      LaunchType: FARGATE
      TaskDefinition: !Ref Task
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref Subnet
          SecurityGroups:
            - !Ref SecurityGroup
