Parameters:

  CommitSha:
    Type: String
    Description:
      The Git commit SHA to deploy. Usually this is the HEAD of the default
      branch, but it can be anything with a tagged image in the registry.

  GitHubPersonalAccessToken:
    Type: String
    Description:
      A GitHub Personal Access Token used to authenticate with their Docker
      registry (docker.pkg.github.com) and pull container images.
    NoEcho: true

  GitHubRepository:
    Type: String
    Description:
      The project name, which is used to name associated resources. This is
      just the repository without the organization or username. Note that
      changing this will probably force replacement on most resources.
    Default: monadoc

  GitHubUsername:
    Type: String
    Description:
      The GitHub username to use for various tasks. This is mostly used to
      avoid repeating yourself.
    Default: tfausak

  Port:
    Type: Number
    Description:
      The port number to bind inside the container. It's unlikely that you'll
      need to change this.
    Default: 4444

Resources:

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html
  DockerCredentials:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${GitHubRepository}-docker-credentials
      Description:
        Credentials used to authenticate with GitHub's Docker registry.
      SecretString: !Sub >
        { "username": "${GitHubUsername}"
        , "password": "${GitHubPersonalAccessToken}"
        }

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${GitHubRepository}-log-group
      RetentionInDays: 30

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html
  Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${GitHubRepository}-role-${AWS::Region}
      Description: !Sub
        Role used to launch ECS tasks for the ${GitHubRepository} project.
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
            Effect: Allow
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html
  Task:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${GitHubRepository}-task-definition
      Cpu: 256
      Memory: 512
      RequiresCompatibilities: [ FARGATE ]
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref Role
      ContainerDefinitions:
        - Name: !Sub ${GitHubRepository}-container
          Essential: true
          Image: !Sub docker.pkg.github.com/${GitHubUsername}/${GitHubRepository}/${GitHubRepository}:${CommitSha}
          RepositoryCredentials:
            CredentialsParameter: !Ref DockerCredentials
          Command:
            - monadoc
            - --host=*
            - !Sub --port=${Port}
          PortMappings:
            - ContainerPort: !Ref Port
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: us-east-1
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: !Ref CommitSha

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html
  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${GitHubRepository}-cluster
